// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file sited_io/commerce/v1/offer.proto (package sited_io.commerce.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Price } from "./price_pb.js";
import { Direction } from "../../types/v1/ordering_pb.js";
import { PaginationRequest, PaginationResponse } from "../../types/v1/pagination_pb.js";
import { MediaUpload } from "../../media/v1/media_pb.js";

/**
 * @generated from enum sited_io.commerce.v1.OfferType
 */
export enum OfferType {
  /**
   * @generated from enum value: OFFER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: OFFER_TYPE_PHYSICAL = 1;
   */
  PHYSICAL = 1,

  /**
   * @generated from enum value: OFFER_TYPE_DIGITAL = 2;
   */
  DIGITAL = 2,

  /**
   * @generated from enum value: OFFER_TYPE_SERVICE = 3;
   */
  SERVICE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(OfferType)
proto3.util.setEnumType(OfferType, "sited_io.commerce.v1.OfferType", [
  { no: 0, name: "OFFER_TYPE_UNSPECIFIED" },
  { no: 1, name: "OFFER_TYPE_PHYSICAL" },
  { no: 2, name: "OFFER_TYPE_DIGITAL" },
  { no: 3, name: "OFFER_TYPE_SERVICE" },
]);

/**
 * @generated from enum sited_io.commerce.v1.OffersOrderByField
 */
export enum OffersOrderByField {
  /**
   * @generated from enum value: OFFERS_ORDER_BY_FIELD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: OFFERS_ORDER_BY_FIELD_CREATED_AT = 1;
   */
  CREATED_AT = 1,

  /**
   * @generated from enum value: OFFERS_ORDER_BY_FIELD_UPDATED_AT = 2;
   */
  UPDATED_AT = 2,

  /**
   * @generated from enum value: OFFERS_ORDER_BY_FIELD_NAME = 3;
   */
  NAME = 3,

  /**
   * @generated from enum value: OFFERS_ORDER_BY_FIELD_RANDOM = 4;
   */
  RANDOM = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(OffersOrderByField)
proto3.util.setEnumType(OffersOrderByField, "sited_io.commerce.v1.OffersOrderByField", [
  { no: 0, name: "OFFERS_ORDER_BY_FIELD_UNSPECIFIED" },
  { no: 1, name: "OFFERS_ORDER_BY_FIELD_CREATED_AT" },
  { no: 2, name: "OFFERS_ORDER_BY_FIELD_UPDATED_AT" },
  { no: 3, name: "OFFERS_ORDER_BY_FIELD_NAME" },
  { no: 4, name: "OFFERS_ORDER_BY_FIELD_RANDOM" },
]);

/**
 * @generated from enum sited_io.commerce.v1.OffersFilterField
 */
export enum OffersFilterField {
  /**
   * @generated from enum value: OFFERS_FILTER_FIELD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: OFFERS_FILTER_FIELD_NAME = 1;
   */
  NAME = 1,

  /**
   * @generated from enum value: OFFERS_FILTER_FIELD_DESCRIPTION = 2;
   */
  DESCRIPTION = 2,

  /**
   * @generated from enum value: OFFERS_FILTER_FIELD_NAME_AND_DESCRIPTION = 3;
   */
  NAME_AND_DESCRIPTION = 3,

  /**
   * @generated from enum value: OFFERS_FILTER_FIELD_TYPE = 4;
   */
  TYPE = 4,

  /**
   * @generated from enum value: OFFERS_FILTER_FIELD_IS_FEATURED = 5;
   */
  IS_FEATURED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(OffersFilterField)
proto3.util.setEnumType(OffersFilterField, "sited_io.commerce.v1.OffersFilterField", [
  { no: 0, name: "OFFERS_FILTER_FIELD_UNSPECIFIED" },
  { no: 1, name: "OFFERS_FILTER_FIELD_NAME" },
  { no: 2, name: "OFFERS_FILTER_FIELD_DESCRIPTION" },
  { no: 3, name: "OFFERS_FILTER_FIELD_NAME_AND_DESCRIPTION" },
  { no: 4, name: "OFFERS_FILTER_FIELD_TYPE" },
  { no: 5, name: "OFFERS_FILTER_FIELD_IS_FEATURED" },
]);

/**
 * @generated from message sited_io.commerce.v1.OfferResponse
 */
export class OfferResponse extends Message<OfferResponse> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: string shop_id = 2;
   */
  shopId = "";

  /**
   * @generated from field: string shop_name = 3;
   */
  shopName = "";

  /**
   * @generated from field: string shop_slug = 4;
   */
  shopSlug = "";

  /**
   * @generated from field: optional string shop_domain = 5;
   */
  shopDomain?: string;

  /**
   * @generated from field: string user_id = 6;
   */
  userId = "";

  /**
   * @generated from field: int64 created_at = 7;
   */
  createdAt = protoInt64.zero;

  /**
   * @generated from field: int64 updated_at = 8;
   */
  updatedAt = protoInt64.zero;

  /**
   * @generated from field: string name = 9;
   */
  name = "";

  /**
   * @generated from field: string description = 10;
   */
  description = "";

  /**
   * @generated from field: bool is_active = 11;
   */
  isActive = false;

  /**
   * @generated from field: bool is_featured = 12;
   */
  isFeatured = false;

  /**
   * @generated from field: sited_io.commerce.v1.OfferType type = 13;
   */
  type = OfferType.UNSPECIFIED;

  /**
   * @generated from field: repeated sited_io.commerce.v1.OfferImageResponse images = 14;
   */
  images: OfferImageResponse[] = [];

  /**
   * @generated from field: optional sited_io.commerce.v1.Price price = 15;
   */
  price?: Price;

  constructor(data?: PartialMessage<OfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.OfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "shop_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "shop_slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "shop_domain", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "created_at", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "updated_at", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "is_featured", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "type", kind: "enum", T: proto3.getEnumType(OfferType) },
    { no: 14, name: "images", kind: "message", T: OfferImageResponse, repeated: true },
    { no: 15, name: "price", kind: "message", T: Price, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OfferResponse {
    return new OfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OfferResponse {
    return new OfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OfferResponse {
    return new OfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OfferResponse | PlainMessage<OfferResponse> | undefined, b: OfferResponse | PlainMessage<OfferResponse> | undefined): boolean {
    return proto3.util.equals(OfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.OfferImageResponse
 */
export class OfferImageResponse extends Message<OfferImageResponse> {
  /**
   * @generated from field: string offer_image_id = 1;
   */
  offerImageId = "";

  /**
   * @generated from field: string image_url = 2;
   */
  imageUrl = "";

  /**
   * @generated from field: int64 ordering = 3;
   */
  ordering = protoInt64.zero;

  constructor(data?: PartialMessage<OfferImageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.OfferImageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_image_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "image_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "ordering", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OfferImageResponse {
    return new OfferImageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OfferImageResponse {
    return new OfferImageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OfferImageResponse {
    return new OfferImageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OfferImageResponse | PlainMessage<OfferImageResponse> | undefined, b: OfferImageResponse | PlainMessage<OfferImageResponse> | undefined): boolean {
    return proto3.util.equals(OfferImageResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.CreateOfferRequest
 */
export class CreateOfferRequest extends Message<CreateOfferRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: sited_io.commerce.v1.OfferType type = 4;
   */
  type = OfferType.UNSPECIFIED;

  /**
   * @generated from field: bool is_featured = 5;
   */
  isFeatured = false;

  constructor(data?: PartialMessage<CreateOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.CreateOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(OfferType) },
    { no: 5, name: "is_featured", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOfferRequest | PlainMessage<CreateOfferRequest> | undefined, b: CreateOfferRequest | PlainMessage<CreateOfferRequest> | undefined): boolean {
    return proto3.util.equals(CreateOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.CreateOfferResponse
 */
export class CreateOfferResponse extends Message<CreateOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v1.OfferResponse offer = 1;
   */
  offer?: OfferResponse;

  constructor(data?: PartialMessage<CreateOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.CreateOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: OfferResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOfferResponse | PlainMessage<CreateOfferResponse> | undefined, b: CreateOfferResponse | PlainMessage<CreateOfferResponse> | undefined): boolean {
    return proto3.util.equals(CreateOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.GetOfferRequest
 */
export class GetOfferRequest extends Message<GetOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<GetOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.GetOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOfferRequest | PlainMessage<GetOfferRequest> | undefined, b: GetOfferRequest | PlainMessage<GetOfferRequest> | undefined): boolean {
    return proto3.util.equals(GetOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.GetOfferResponse
 */
export class GetOfferResponse extends Message<GetOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v1.OfferResponse offer = 1;
   */
  offer?: OfferResponse;

  constructor(data?: PartialMessage<GetOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.GetOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: OfferResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOfferResponse | PlainMessage<GetOfferResponse> | undefined, b: GetOfferResponse | PlainMessage<GetOfferResponse> | undefined): boolean {
    return proto3.util.equals(GetOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.GetMyOfferRequest
 */
export class GetMyOfferRequest extends Message<GetMyOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<GetMyOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.GetMyOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyOfferRequest {
    return new GetMyOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyOfferRequest {
    return new GetMyOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyOfferRequest {
    return new GetMyOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyOfferRequest | PlainMessage<GetMyOfferRequest> | undefined, b: GetMyOfferRequest | PlainMessage<GetMyOfferRequest> | undefined): boolean {
    return proto3.util.equals(GetMyOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.GetMyOfferResponse
 */
export class GetMyOfferResponse extends Message<GetMyOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v1.OfferResponse offer = 1;
   */
  offer?: OfferResponse;

  constructor(data?: PartialMessage<GetMyOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.GetMyOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: OfferResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyOfferResponse {
    return new GetMyOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyOfferResponse {
    return new GetMyOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyOfferResponse {
    return new GetMyOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMyOfferResponse | PlainMessage<GetMyOfferResponse> | undefined, b: GetMyOfferResponse | PlainMessage<GetMyOfferResponse> | undefined): boolean {
    return proto3.util.equals(GetMyOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.OffersOrderBy
 */
export class OffersOrderBy extends Message<OffersOrderBy> {
  /**
   * @generated from field: sited_io.commerce.v1.OffersOrderByField field = 1;
   */
  field = OffersOrderByField.UNSPECIFIED;

  /**
   * @generated from field: sited_io.types.v1.Direction direction = 2;
   */
  direction = Direction.UNSPECIFIED;

  constructor(data?: PartialMessage<OffersOrderBy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.OffersOrderBy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field", kind: "enum", T: proto3.getEnumType(OffersOrderByField) },
    { no: 2, name: "direction", kind: "enum", T: proto3.getEnumType(Direction) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OffersOrderBy {
    return new OffersOrderBy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OffersOrderBy {
    return new OffersOrderBy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OffersOrderBy {
    return new OffersOrderBy().fromJsonString(jsonString, options);
  }

  static equals(a: OffersOrderBy | PlainMessage<OffersOrderBy> | undefined, b: OffersOrderBy | PlainMessage<OffersOrderBy> | undefined): boolean {
    return proto3.util.equals(OffersOrderBy, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.OffersFilter
 */
export class OffersFilter extends Message<OffersFilter> {
  /**
   * @generated from field: sited_io.commerce.v1.OffersFilterField field = 1;
   */
  field = OffersFilterField.UNSPECIFIED;

  /**
   * @generated from field: string query = 2;
   */
  query = "";

  constructor(data?: PartialMessage<OffersFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.OffersFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field", kind: "enum", T: proto3.getEnumType(OffersFilterField) },
    { no: 2, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OffersFilter {
    return new OffersFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OffersFilter {
    return new OffersFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OffersFilter {
    return new OffersFilter().fromJsonString(jsonString, options);
  }

  static equals(a: OffersFilter | PlainMessage<OffersFilter> | undefined, b: OffersFilter | PlainMessage<OffersFilter> | undefined): boolean {
    return proto3.util.equals(OffersFilter, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.ListOffersRequest
 */
export class ListOffersRequest extends Message<ListOffersRequest> {
  /**
   * @generated from field: optional string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: optional string shop_id = 2;
   */
  shopId?: string;

  /**
   * @generated from field: optional sited_io.types.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: optional sited_io.commerce.v1.OffersOrderBy order_by = 4;
   */
  orderBy?: OffersOrderBy;

  /**
   * @generated from field: optional sited_io.commerce.v1.OffersFilter filter = 5;
   */
  filter?: OffersFilter;

  constructor(data?: PartialMessage<ListOffersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.ListOffersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "pagination", kind: "message", T: PaginationRequest, opt: true },
    { no: 4, name: "order_by", kind: "message", T: OffersOrderBy, opt: true },
    { no: 5, name: "filter", kind: "message", T: OffersFilter, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOffersRequest | PlainMessage<ListOffersRequest> | undefined, b: ListOffersRequest | PlainMessage<ListOffersRequest> | undefined): boolean {
    return proto3.util.equals(ListOffersRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.ListOffersResponse
 */
export class ListOffersResponse extends Message<ListOffersResponse> {
  /**
   * @generated from field: repeated sited_io.commerce.v1.OfferResponse offers = 1;
   */
  offers: OfferResponse[] = [];

  /**
   * @generated from field: sited_io.types.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  constructor(data?: PartialMessage<ListOffersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.ListOffersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offers", kind: "message", T: OfferResponse, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PaginationResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOffersResponse | PlainMessage<ListOffersResponse> | undefined, b: ListOffersResponse | PlainMessage<ListOffersResponse> | undefined): boolean {
    return proto3.util.equals(ListOffersResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.UpdateOfferRequest
 */
export class UpdateOfferRequest extends Message<UpdateOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: optional bool is_active = 4;
   */
  isActive?: boolean;

  /**
   * @generated from field: optional sited_io.commerce.v1.OfferType type = 5;
   */
  type?: OfferType;

  /**
   * @generated from field: optional bool is_featured = 6;
   */
  isFeatured?: boolean;

  constructor(data?: PartialMessage<UpdateOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.UpdateOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(OfferType), opt: true },
    { no: 6, name: "is_featured", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOfferRequest | PlainMessage<UpdateOfferRequest> | undefined, b: UpdateOfferRequest | PlainMessage<UpdateOfferRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.UpdateOfferResponse
 */
export class UpdateOfferResponse extends Message<UpdateOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v1.OfferResponse offer = 1;
   */
  offer?: OfferResponse;

  constructor(data?: PartialMessage<UpdateOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.UpdateOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: OfferResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOfferResponse | PlainMessage<UpdateOfferResponse> | undefined, b: UpdateOfferResponse | PlainMessage<UpdateOfferResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.DeleteOfferRequest
 */
export class DeleteOfferRequest extends Message<DeleteOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<DeleteOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.DeleteOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOfferRequest | PlainMessage<DeleteOfferRequest> | undefined, b: DeleteOfferRequest | PlainMessage<DeleteOfferRequest> | undefined): boolean {
    return proto3.util.equals(DeleteOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.DeleteOfferResponse
 */
export class DeleteOfferResponse extends Message<DeleteOfferResponse> {
  constructor(data?: PartialMessage<DeleteOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.DeleteOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOfferResponse | PlainMessage<DeleteOfferResponse> | undefined, b: DeleteOfferResponse | PlainMessage<DeleteOfferResponse> | undefined): boolean {
    return proto3.util.equals(DeleteOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.AddImageToOfferRequest
 */
export class AddImageToOfferRequest extends Message<AddImageToOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: sited_io.media.v1.MediaUpload image = 2;
   */
  image?: MediaUpload;

  /**
   * @generated from field: int64 ordering = 3;
   */
  ordering = protoInt64.zero;

  constructor(data?: PartialMessage<AddImageToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.AddImageToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "image", kind: "message", T: MediaUpload },
    { no: 3, name: "ordering", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddImageToOfferRequest | PlainMessage<AddImageToOfferRequest> | undefined, b: AddImageToOfferRequest | PlainMessage<AddImageToOfferRequest> | undefined): boolean {
    return proto3.util.equals(AddImageToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.AddImageToOfferResponse
 */
export class AddImageToOfferResponse extends Message<AddImageToOfferResponse> {
  constructor(data?: PartialMessage<AddImageToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.AddImageToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddImageToOfferResponse | PlainMessage<AddImageToOfferResponse> | undefined, b: AddImageToOfferResponse | PlainMessage<AddImageToOfferResponse> | undefined): boolean {
    return proto3.util.equals(AddImageToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.RemoveImageFromOfferRequest
 */
export class RemoveImageFromOfferRequest extends Message<RemoveImageFromOfferRequest> {
  /**
   * @generated from field: string offer_image_id = 1;
   */
  offerImageId = "";

  constructor(data?: PartialMessage<RemoveImageFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.RemoveImageFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_image_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveImageFromOfferRequest | PlainMessage<RemoveImageFromOfferRequest> | undefined, b: RemoveImageFromOfferRequest | PlainMessage<RemoveImageFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemoveImageFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.RemoveImageFromOfferResponse
 */
export class RemoveImageFromOfferResponse extends Message<RemoveImageFromOfferResponse> {
  constructor(data?: PartialMessage<RemoveImageFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.RemoveImageFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveImageFromOfferResponse | PlainMessage<RemoveImageFromOfferResponse> | undefined, b: RemoveImageFromOfferResponse | PlainMessage<RemoveImageFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemoveImageFromOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.PutPriceToOfferRequest
 */
export class PutPriceToOfferRequest extends Message<PutPriceToOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: sited_io.commerce.v1.Price price = 2;
   */
  price?: Price;

  constructor(data?: PartialMessage<PutPriceToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.PutPriceToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "price", kind: "message", T: Price },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PutPriceToOfferRequest | PlainMessage<PutPriceToOfferRequest> | undefined, b: PutPriceToOfferRequest | PlainMessage<PutPriceToOfferRequest> | undefined): boolean {
    return proto3.util.equals(PutPriceToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.PutPriceToOfferResponse
 */
export class PutPriceToOfferResponse extends Message<PutPriceToOfferResponse> {
  constructor(data?: PartialMessage<PutPriceToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.PutPriceToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PutPriceToOfferResponse | PlainMessage<PutPriceToOfferResponse> | undefined, b: PutPriceToOfferResponse | PlainMessage<PutPriceToOfferResponse> | undefined): boolean {
    return proto3.util.equals(PutPriceToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.RemovePriceFromOfferRequest
 */
export class RemovePriceFromOfferRequest extends Message<RemovePriceFromOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<RemovePriceFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.RemovePriceFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePriceFromOfferRequest | PlainMessage<RemovePriceFromOfferRequest> | undefined, b: RemovePriceFromOfferRequest | PlainMessage<RemovePriceFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemovePriceFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v1.RemovePriceFromOfferResponse
 */
export class RemovePriceFromOfferResponse extends Message<RemovePriceFromOfferResponse> {
  constructor(data?: PartialMessage<RemovePriceFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v1.RemovePriceFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePriceFromOfferResponse | PlainMessage<RemovePriceFromOfferResponse> | undefined, b: RemovePriceFromOfferResponse | PlainMessage<RemovePriceFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemovePriceFromOfferResponse, a, b);
  }
}

