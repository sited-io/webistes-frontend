// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file sited_io/commerce/v2/payment.proto (package sited_io.commerce.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { OrderType, PaymentMethod } from "./order_pb.js";

/**
 * @generated from message sited_io.commerce.v2.Payment
 */
export class Payment extends Message<Payment> {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId = "";

  /**
   * @generated from field: string offer_id = 2;
   */
  offerId = "";

  /**
   * @generated from field: optional string buyer_user_id = 3;
   */
  buyerUserId?: string;

  /**
   * @generated from field: sited_io.commerce.v2.OrderType order_type = 4;
   */
  orderType?: OrderType;

  /**
   * @generated from field: sited_io.commerce.v2.PaymentMethod payment_method = 5;
   */
  paymentMethod?: PaymentMethod;

  constructor(data?: PartialMessage<Payment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.Payment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "buyer_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "order_type", kind: "message", T: OrderType },
    { no: 5, name: "payment_method", kind: "message", T: PaymentMethod },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Payment {
    return new Payment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Payment {
    return new Payment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Payment {
    return new Payment().fromJsonString(jsonString, options);
  }

  static equals(a: Payment | PlainMessage<Payment> | undefined, b: Payment | PlainMessage<Payment> | undefined): boolean {
    return proto3.util.equals(Payment, a, b);
  }
}

