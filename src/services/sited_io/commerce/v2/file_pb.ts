// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file sited_io/commerce/v2/file.proto (package sited_io.commerce.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message sited_io.commerce.v2.MultipartPart
 */
export class MultipartPart extends Message<MultipartPart> {
  /**
   * @generated from field: int32 part_number = 1;
   */
  partNumber = 0;

  /**
   * @generated from field: string etag = 2;
   */
  etag = "";

  constructor(data?: PartialMessage<MultipartPart>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.MultipartPart";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "part_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "etag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MultipartPart {
    return new MultipartPart().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MultipartPart {
    return new MultipartPart().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MultipartPart {
    return new MultipartPart().fromJsonString(jsonString, options);
  }

  static equals(a: MultipartPart | PlainMessage<MultipartPart> | undefined, b: MultipartPart | PlainMessage<MultipartPart> | undefined): boolean {
    return proto3.util.equals(MultipartPart, a, b);
  }
}

