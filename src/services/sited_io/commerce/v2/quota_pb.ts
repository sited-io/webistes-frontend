// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file sited_io/commerce/v2/quota.proto (package sited_io.commerce.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message sited_io.commerce.v2.UserQuota
 */
export class UserQuota extends Message<UserQuota> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: uint64 max_allowed_size_bytes = 2;
   */
  maxAllowedSizeBytes = protoInt64.zero;

  /**
   * @generated from field: uint64 uploaded_size_bytes = 3;
   */
  uploadedSizeBytes = protoInt64.zero;

  constructor(data?: PartialMessage<UserQuota>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UserQuota";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "max_allowed_size_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "uploaded_size_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserQuota {
    return new UserQuota().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserQuota {
    return new UserQuota().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserQuota {
    return new UserQuota().fromJsonString(jsonString, options);
  }

  static equals(a: UserQuota | PlainMessage<UserQuota> | undefined, b: UserQuota | PlainMessage<UserQuota> | undefined): boolean {
    return proto3.util.equals(UserQuota, a, b);
  }
}

