// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file sited_io/commerce/v2/commerce_service.proto (package sited_io.commerce.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Offer, Offer_Details, OfferType, PriceType } from "./offer_pb.js";
import { PaginationRequest, PaginationResponse } from "../../types/query/v1/query_pb.js";
import { OffersFilter, OffersOrderBy } from "./query_pb.js";
import { CurrencyCode } from "../../types/currency/v1/currency_pb.js";
import { CountryCode } from "../../types/country/v1/country_pb.js";
import { MultipartPart } from "./file_pb.js";
import { Shop } from "./shop_pb.js";
import { Order } from "./order_pb.js";
import { StripeAccount } from "./stripe_pb.js";

/**
 * @generated from message sited_io.commerce.v2.CreateOfferRequest
 */
export class CreateOfferRequest extends Message<CreateOfferRequest> {
  /**
   * @generated from field: sited_io.commerce.v2.Offer.Details details = 1;
   */
  details?: Offer_Details;

  /**
   * @generated from field: sited_io.commerce.v2.OfferType offer_type = 2;
   */
  offerType?: OfferType;

  constructor(data?: PartialMessage<CreateOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Offer_Details },
    { no: 2, name: "offer_type", kind: "message", T: OfferType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOfferRequest | PlainMessage<CreateOfferRequest> | undefined, b: CreateOfferRequest | PlainMessage<CreateOfferRequest> | undefined): boolean {
    return proto3.util.equals(CreateOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CreateOfferResponse
 */
export class CreateOfferResponse extends Message<CreateOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Offer offer = 1;
   */
  offer?: Offer;

  constructor(data?: PartialMessage<CreateOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: Offer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOfferResponse | PlainMessage<CreateOfferResponse> | undefined, b: CreateOfferResponse | PlainMessage<CreateOfferResponse> | undefined): boolean {
    return proto3.util.equals(CreateOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetOfferRequest
 */
export class GetOfferRequest extends Message<GetOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<GetOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOfferRequest | PlainMessage<GetOfferRequest> | undefined, b: GetOfferRequest | PlainMessage<GetOfferRequest> | undefined): boolean {
    return proto3.util.equals(GetOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetOfferResponse
 */
export class GetOfferResponse extends Message<GetOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Offer offer = 1;
   */
  offer?: Offer;

  constructor(data?: PartialMessage<GetOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: Offer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOfferResponse | PlainMessage<GetOfferResponse> | undefined, b: GetOfferResponse | PlainMessage<GetOfferResponse> | undefined): boolean {
    return proto3.util.equals(GetOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.ListOffersRequest
 */
export class ListOffersRequest extends Message<ListOffersRequest> {
  /**
   * @generated from field: optional string owner = 1;
   */
  owner?: string;

  /**
   * @generated from field: optional string shop_id = 2;
   */
  shopId?: string;

  /**
   * @generated from field: optional sited_io.types.query.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: optional sited_io.commerce.v2.OffersOrderBy order_by = 4;
   */
  orderBy?: OffersOrderBy;

  /**
   * @generated from field: optional sited_io.commerce.v2.OffersFilter filter = 5;
   */
  filter?: OffersFilter;

  constructor(data?: PartialMessage<ListOffersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.ListOffersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "pagination", kind: "message", T: PaginationRequest, opt: true },
    { no: 4, name: "order_by", kind: "message", T: OffersOrderBy, opt: true },
    { no: 5, name: "filter", kind: "message", T: OffersFilter, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOffersRequest | PlainMessage<ListOffersRequest> | undefined, b: ListOffersRequest | PlainMessage<ListOffersRequest> | undefined): boolean {
    return proto3.util.equals(ListOffersRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.ListOffersResponse
 */
export class ListOffersResponse extends Message<ListOffersResponse> {
  /**
   * @generated from field: repeated sited_io.commerce.v2.Offer offers = 1;
   */
  offers: Offer[] = [];

  /**
   * @generated from field: sited_io.types.query.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  constructor(data?: PartialMessage<ListOffersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.ListOffersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offers", kind: "message", T: Offer, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PaginationResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOffersResponse | PlainMessage<ListOffersResponse> | undefined, b: ListOffersResponse | PlainMessage<ListOffersResponse> | undefined): boolean {
    return proto3.util.equals(ListOffersResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.UpdateOfferRequest
 */
export class UpdateOfferRequest extends Message<UpdateOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: sited_io.commerce.v2.Offer.Details details = 2;
   */
  details?: Offer_Details;

  /**
   * @generated from field: sited_io.commerce.v2.OfferType offer_type = 3;
   */
  offerType?: OfferType;

  constructor(data?: PartialMessage<UpdateOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UpdateOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: Offer_Details },
    { no: 3, name: "offer_type", kind: "message", T: OfferType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOfferRequest | PlainMessage<UpdateOfferRequest> | undefined, b: UpdateOfferRequest | PlainMessage<UpdateOfferRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.UpdateOfferResponse
 */
export class UpdateOfferResponse extends Message<UpdateOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Offer offer = 1;
   */
  offer?: Offer;

  constructor(data?: PartialMessage<UpdateOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UpdateOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: Offer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOfferResponse | PlainMessage<UpdateOfferResponse> | undefined, b: UpdateOfferResponse | PlainMessage<UpdateOfferResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DeleteOfferRequest
 */
export class DeleteOfferRequest extends Message<DeleteOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<DeleteOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DeleteOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOfferRequest | PlainMessage<DeleteOfferRequest> | undefined, b: DeleteOfferRequest | PlainMessage<DeleteOfferRequest> | undefined): boolean {
    return proto3.util.equals(DeleteOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DeleteOfferResponse
 */
export class DeleteOfferResponse extends Message<DeleteOfferResponse> {
  constructor(data?: PartialMessage<DeleteOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DeleteOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOfferResponse | PlainMessage<DeleteOfferResponse> | undefined, b: DeleteOfferResponse | PlainMessage<DeleteOfferResponse> | undefined): boolean {
    return proto3.util.equals(DeleteOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.PutPriceToOfferRequest
 */
export class PutPriceToOfferRequest extends Message<PutPriceToOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: uint32 unit_amount = 2;
   */
  unitAmount = 0;

  /**
   * @generated from field: sited_io.types.currency.v1.CurrencyCode currency = 3;
   */
  currency = CurrencyCode.UNSPECIFIED;

  /**
   * @generated from field: sited_io.commerce.v2.PriceType price_type = 4;
   */
  priceType?: PriceType;

  constructor(data?: PartialMessage<PutPriceToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.PutPriceToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "unit_amount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "currency", kind: "enum", T: proto3.getEnumType(CurrencyCode) },
    { no: 4, name: "price_type", kind: "message", T: PriceType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PutPriceToOfferRequest | PlainMessage<PutPriceToOfferRequest> | undefined, b: PutPriceToOfferRequest | PlainMessage<PutPriceToOfferRequest> | undefined): boolean {
    return proto3.util.equals(PutPriceToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.PutPriceToOfferResponse
 */
export class PutPriceToOfferResponse extends Message<PutPriceToOfferResponse> {
  constructor(data?: PartialMessage<PutPriceToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.PutPriceToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PutPriceToOfferResponse | PlainMessage<PutPriceToOfferResponse> | undefined, b: PutPriceToOfferResponse | PlainMessage<PutPriceToOfferResponse> | undefined): boolean {
    return proto3.util.equals(PutPriceToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemovePriceFromOfferRequest
 */
export class RemovePriceFromOfferRequest extends Message<RemovePriceFromOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<RemovePriceFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemovePriceFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePriceFromOfferRequest | PlainMessage<RemovePriceFromOfferRequest> | undefined, b: RemovePriceFromOfferRequest | PlainMessage<RemovePriceFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemovePriceFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemovePriceFromOfferResponse
 */
export class RemovePriceFromOfferResponse extends Message<RemovePriceFromOfferResponse> {
  constructor(data?: PartialMessage<RemovePriceFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemovePriceFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePriceFromOfferResponse | PlainMessage<RemovePriceFromOfferResponse> | undefined, b: RemovePriceFromOfferResponse | PlainMessage<RemovePriceFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemovePriceFromOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.PutShippingRateToOfferRequest
 */
export class PutShippingRateToOfferRequest extends Message<PutShippingRateToOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: uint32 unit_amount = 2;
   */
  unitAmount = 0;

  /**
   * @generated from field: sited_io.types.currency.v1.CurrencyCode currency = 3;
   */
  currency = CurrencyCode.UNSPECIFIED;

  /**
   * @generated from field: bool all_countries = 4;
   */
  allCountries = false;

  /**
   * @generated from field: repeated sited_io.types.country.v1.CountryCode specific_countries = 5;
   */
  specificCountries: CountryCode[] = [];

  constructor(data?: PartialMessage<PutShippingRateToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.PutShippingRateToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "unit_amount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "currency", kind: "enum", T: proto3.getEnumType(CurrencyCode) },
    { no: 4, name: "all_countries", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "specific_countries", kind: "enum", T: proto3.getEnumType(CountryCode), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutShippingRateToOfferRequest {
    return new PutShippingRateToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutShippingRateToOfferRequest {
    return new PutShippingRateToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutShippingRateToOfferRequest {
    return new PutShippingRateToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PutShippingRateToOfferRequest | PlainMessage<PutShippingRateToOfferRequest> | undefined, b: PutShippingRateToOfferRequest | PlainMessage<PutShippingRateToOfferRequest> | undefined): boolean {
    return proto3.util.equals(PutShippingRateToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.PutShippingRateToOfferResponse
 */
export class PutShippingRateToOfferResponse extends Message<PutShippingRateToOfferResponse> {
  constructor(data?: PartialMessage<PutShippingRateToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.PutShippingRateToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutShippingRateToOfferResponse {
    return new PutShippingRateToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutShippingRateToOfferResponse {
    return new PutShippingRateToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutShippingRateToOfferResponse {
    return new PutShippingRateToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PutShippingRateToOfferResponse | PlainMessage<PutShippingRateToOfferResponse> | undefined, b: PutShippingRateToOfferResponse | PlainMessage<PutShippingRateToOfferResponse> | undefined): boolean {
    return proto3.util.equals(PutShippingRateToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveShippingRateFromOfferRequest
 */
export class RemoveShippingRateFromOfferRequest extends Message<RemoveShippingRateFromOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<RemoveShippingRateFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveShippingRateFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveShippingRateFromOfferRequest {
    return new RemoveShippingRateFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveShippingRateFromOfferRequest {
    return new RemoveShippingRateFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveShippingRateFromOfferRequest {
    return new RemoveShippingRateFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveShippingRateFromOfferRequest | PlainMessage<RemoveShippingRateFromOfferRequest> | undefined, b: RemoveShippingRateFromOfferRequest | PlainMessage<RemoveShippingRateFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemoveShippingRateFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveShippingRateFromOfferResponse
 */
export class RemoveShippingRateFromOfferResponse extends Message<RemoveShippingRateFromOfferResponse> {
  constructor(data?: PartialMessage<RemoveShippingRateFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveShippingRateFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveShippingRateFromOfferResponse {
    return new RemoveShippingRateFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveShippingRateFromOfferResponse {
    return new RemoveShippingRateFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveShippingRateFromOfferResponse {
    return new RemoveShippingRateFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveShippingRateFromOfferResponse | PlainMessage<RemoveShippingRateFromOfferResponse> | undefined, b: RemoveShippingRateFromOfferResponse | PlainMessage<RemoveShippingRateFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemoveShippingRateFromOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddImageToOfferRequest
 */
export class AddImageToOfferRequest extends Message<AddImageToOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: bytes data = 2;
   */
  data = new Uint8Array(0);

  /**
   * @generated from field: int32 ordering = 3;
   */
  ordering = 0;

  constructor(data?: PartialMessage<AddImageToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddImageToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "ordering", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddImageToOfferRequest | PlainMessage<AddImageToOfferRequest> | undefined, b: AddImageToOfferRequest | PlainMessage<AddImageToOfferRequest> | undefined): boolean {
    return proto3.util.equals(AddImageToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddImageToOfferResponse
 */
export class AddImageToOfferResponse extends Message<AddImageToOfferResponse> {
  constructor(data?: PartialMessage<AddImageToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddImageToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddImageToOfferResponse | PlainMessage<AddImageToOfferResponse> | undefined, b: AddImageToOfferResponse | PlainMessage<AddImageToOfferResponse> | undefined): boolean {
    return proto3.util.equals(AddImageToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.UpdateImageOrderingRequest
 */
export class UpdateImageOrderingRequest extends Message<UpdateImageOrderingRequest> {
  /**
   * @generated from field: string offer_image_id = 1;
   */
  offerImageId = "";

  /**
   * @generated from field: int32 ordering = 2;
   */
  ordering = 0;

  constructor(data?: PartialMessage<UpdateImageOrderingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UpdateImageOrderingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_image_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ordering", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateImageOrderingRequest {
    return new UpdateImageOrderingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateImageOrderingRequest {
    return new UpdateImageOrderingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateImageOrderingRequest {
    return new UpdateImageOrderingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateImageOrderingRequest | PlainMessage<UpdateImageOrderingRequest> | undefined, b: UpdateImageOrderingRequest | PlainMessage<UpdateImageOrderingRequest> | undefined): boolean {
    return proto3.util.equals(UpdateImageOrderingRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.UpdateImageOrderingResponse
 */
export class UpdateImageOrderingResponse extends Message<UpdateImageOrderingResponse> {
  constructor(data?: PartialMessage<UpdateImageOrderingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UpdateImageOrderingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateImageOrderingResponse {
    return new UpdateImageOrderingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateImageOrderingResponse {
    return new UpdateImageOrderingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateImageOrderingResponse {
    return new UpdateImageOrderingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateImageOrderingResponse | PlainMessage<UpdateImageOrderingResponse> | undefined, b: UpdateImageOrderingResponse | PlainMessage<UpdateImageOrderingResponse> | undefined): boolean {
    return proto3.util.equals(UpdateImageOrderingResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveImageFromOfferRequest
 */
export class RemoveImageFromOfferRequest extends Message<RemoveImageFromOfferRequest> {
  /**
   * @generated from field: string offer_image_id = 1;
   */
  offerImageId = "";

  /**
   * @generated from field: string offer_id = 2;
   */
  offerId = "";

  constructor(data?: PartialMessage<RemoveImageFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveImageFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_image_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveImageFromOfferRequest | PlainMessage<RemoveImageFromOfferRequest> | undefined, b: RemoveImageFromOfferRequest | PlainMessage<RemoveImageFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemoveImageFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveImageFromOfferResponse
 */
export class RemoveImageFromOfferResponse extends Message<RemoveImageFromOfferResponse> {
  constructor(data?: PartialMessage<RemoveImageFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveImageFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveImageFromOfferResponse | PlainMessage<RemoveImageFromOfferResponse> | undefined, b: RemoveImageFromOfferResponse | PlainMessage<RemoveImageFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemoveImageFromOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddFileToOfferRequest
 */
export class AddFileToOfferRequest extends Message<AddFileToOfferRequest> {
  /**
   * @generated from field: string file_name = 1;
   */
  fileName = "";

  /**
   * @generated from field: string offer_id = 2;
   */
  offerId = "";

  /**
   * @generated from field: bytes content = 3;
   */
  content = new Uint8Array(0);

  /**
   * @generated from field: optional string content_type = 4;
   */
  contentType?: string;

  /**
   * @generated from field: optional int32 ordering = 5;
   */
  ordering?: number;

  constructor(data?: PartialMessage<AddFileToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddFileToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "content", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "content_type", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "ordering", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddFileToOfferRequest {
    return new AddFileToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddFileToOfferRequest {
    return new AddFileToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddFileToOfferRequest {
    return new AddFileToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddFileToOfferRequest | PlainMessage<AddFileToOfferRequest> | undefined, b: AddFileToOfferRequest | PlainMessage<AddFileToOfferRequest> | undefined): boolean {
    return proto3.util.equals(AddFileToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddFileToOfferResponse
 */
export class AddFileToOfferResponse extends Message<AddFileToOfferResponse> {
  constructor(data?: PartialMessage<AddFileToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddFileToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddFileToOfferResponse {
    return new AddFileToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddFileToOfferResponse {
    return new AddFileToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddFileToOfferResponse {
    return new AddFileToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddFileToOfferResponse | PlainMessage<AddFileToOfferResponse> | undefined, b: AddFileToOfferResponse | PlainMessage<AddFileToOfferResponse> | undefined): boolean {
    return proto3.util.equals(AddFileToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.InitiateMultipartUploadRequest
 */
export class InitiateMultipartUploadRequest extends Message<InitiateMultipartUploadRequest> {
  /**
   * @generated from field: string file_name = 1;
   */
  fileName = "";

  /**
   * @generated from field: string offer_id = 2;
   */
  offerId = "";

  /**
   * @generated from field: uint64 total_size_bytes = 3;
   */
  totalSizeBytes = protoInt64.zero;

  /**
   * @generated from field: optional string content_type = 4;
   */
  contentType?: string;

  /**
   * @generated from field: optional int32 ordering = 5;
   */
  ordering?: number;

  constructor(data?: PartialMessage<InitiateMultipartUploadRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.InitiateMultipartUploadRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "total_size_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "content_type", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "ordering", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitiateMultipartUploadRequest {
    return new InitiateMultipartUploadRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitiateMultipartUploadRequest {
    return new InitiateMultipartUploadRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitiateMultipartUploadRequest {
    return new InitiateMultipartUploadRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InitiateMultipartUploadRequest | PlainMessage<InitiateMultipartUploadRequest> | undefined, b: InitiateMultipartUploadRequest | PlainMessage<InitiateMultipartUploadRequest> | undefined): boolean {
    return proto3.util.equals(InitiateMultipartUploadRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.InitiateMultipartUploadResponse
 */
export class InitiateMultipartUploadResponse extends Message<InitiateMultipartUploadResponse> {
  /**
   * @generated from field: string offer_file_id = 1;
   */
  offerFileId = "";

  /**
   * @generated from field: string key = 2;
   */
  key = "";

  /**
   * @generated from field: string upload_id = 3;
   */
  uploadId = "";

  constructor(data?: PartialMessage<InitiateMultipartUploadResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.InitiateMultipartUploadResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_file_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "upload_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitiateMultipartUploadResponse {
    return new InitiateMultipartUploadResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitiateMultipartUploadResponse {
    return new InitiateMultipartUploadResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitiateMultipartUploadResponse {
    return new InitiateMultipartUploadResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InitiateMultipartUploadResponse | PlainMessage<InitiateMultipartUploadResponse> | undefined, b: InitiateMultipartUploadResponse | PlainMessage<InitiateMultipartUploadResponse> | undefined): boolean {
    return proto3.util.equals(InitiateMultipartUploadResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.PutMultipartChunkRequest
 */
export class PutMultipartChunkRequest extends Message<PutMultipartChunkRequest> {
  /**
   * @generated from field: string offer_file_id = 1;
   */
  offerFileId = "";

  /**
   * @generated from field: string upload_id = 2;
   */
  uploadId = "";

  /**
   * @generated from field: int32 part_number = 3;
   */
  partNumber = 0;

  /**
   * @generated from field: bytes chunk = 4;
   */
  chunk = new Uint8Array(0);

  constructor(data?: PartialMessage<PutMultipartChunkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.PutMultipartChunkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_file_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "upload_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "part_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "chunk", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutMultipartChunkRequest {
    return new PutMultipartChunkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutMultipartChunkRequest {
    return new PutMultipartChunkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutMultipartChunkRequest {
    return new PutMultipartChunkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PutMultipartChunkRequest | PlainMessage<PutMultipartChunkRequest> | undefined, b: PutMultipartChunkRequest | PlainMessage<PutMultipartChunkRequest> | undefined): boolean {
    return proto3.util.equals(PutMultipartChunkRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.PutMultipartChunkResponse
 */
export class PutMultipartChunkResponse extends Message<PutMultipartChunkResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.MultipartPart part = 1;
   */
  part?: MultipartPart;

  constructor(data?: PartialMessage<PutMultipartChunkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.PutMultipartChunkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "part", kind: "message", T: MultipartPart },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutMultipartChunkResponse {
    return new PutMultipartChunkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutMultipartChunkResponse {
    return new PutMultipartChunkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutMultipartChunkResponse {
    return new PutMultipartChunkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PutMultipartChunkResponse | PlainMessage<PutMultipartChunkResponse> | undefined, b: PutMultipartChunkResponse | PlainMessage<PutMultipartChunkResponse> | undefined): boolean {
    return proto3.util.equals(PutMultipartChunkResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CompleteMultipartUploadRequest
 */
export class CompleteMultipartUploadRequest extends Message<CompleteMultipartUploadRequest> {
  /**
   * @generated from field: string offer_file_id = 1;
   */
  offerFileId = "";

  /**
   * @generated from field: string upload_id = 2;
   */
  uploadId = "";

  /**
   * @generated from field: repeated sited_io.commerce.v2.MultipartPart parts = 3;
   */
  parts: MultipartPart[] = [];

  constructor(data?: PartialMessage<CompleteMultipartUploadRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CompleteMultipartUploadRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_file_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "upload_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "parts", kind: "message", T: MultipartPart, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompleteMultipartUploadRequest {
    return new CompleteMultipartUploadRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompleteMultipartUploadRequest {
    return new CompleteMultipartUploadRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompleteMultipartUploadRequest {
    return new CompleteMultipartUploadRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CompleteMultipartUploadRequest | PlainMessage<CompleteMultipartUploadRequest> | undefined, b: CompleteMultipartUploadRequest | PlainMessage<CompleteMultipartUploadRequest> | undefined): boolean {
    return proto3.util.equals(CompleteMultipartUploadRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CompleteMultipartUploadResponse
 */
export class CompleteMultipartUploadResponse extends Message<CompleteMultipartUploadResponse> {
  constructor(data?: PartialMessage<CompleteMultipartUploadResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CompleteMultipartUploadResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompleteMultipartUploadResponse {
    return new CompleteMultipartUploadResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompleteMultipartUploadResponse {
    return new CompleteMultipartUploadResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompleteMultipartUploadResponse {
    return new CompleteMultipartUploadResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CompleteMultipartUploadResponse | PlainMessage<CompleteMultipartUploadResponse> | undefined, b: CompleteMultipartUploadResponse | PlainMessage<CompleteMultipartUploadResponse> | undefined): boolean {
    return proto3.util.equals(CompleteMultipartUploadResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DownloadFileRequest
 */
export class DownloadFileRequest extends Message<DownloadFileRequest> {
  /**
   * @generated from field: string offer_file_id = 1;
   */
  offerFileId = "";

  constructor(data?: PartialMessage<DownloadFileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DownloadFileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_file_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DownloadFileRequest {
    return new DownloadFileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DownloadFileRequest {
    return new DownloadFileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DownloadFileRequest {
    return new DownloadFileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DownloadFileRequest | PlainMessage<DownloadFileRequest> | undefined, b: DownloadFileRequest | PlainMessage<DownloadFileRequest> | undefined): boolean {
    return proto3.util.equals(DownloadFileRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DownloadFileResponse
 */
export class DownloadFileResponse extends Message<DownloadFileResponse> {
  /**
   * @generated from field: string download_url = 1;
   */
  downloadUrl = "";

  constructor(data?: PartialMessage<DownloadFileResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DownloadFileResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "download_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DownloadFileResponse {
    return new DownloadFileResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DownloadFileResponse {
    return new DownloadFileResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DownloadFileResponse {
    return new DownloadFileResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DownloadFileResponse | PlainMessage<DownloadFileResponse> | undefined, b: DownloadFileResponse | PlainMessage<DownloadFileResponse> | undefined): boolean {
    return proto3.util.equals(DownloadFileResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.UpdateFileOrderingRequest
 */
export class UpdateFileOrderingRequest extends Message<UpdateFileOrderingRequest> {
  /**
   * @generated from field: string offer_file_id = 1;
   */
  offerFileId = "";

  /**
   * @generated from field: int32 ordering = 2;
   */
  ordering = 0;

  constructor(data?: PartialMessage<UpdateFileOrderingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UpdateFileOrderingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_file_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ordering", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateFileOrderingRequest {
    return new UpdateFileOrderingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateFileOrderingRequest {
    return new UpdateFileOrderingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateFileOrderingRequest {
    return new UpdateFileOrderingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateFileOrderingRequest | PlainMessage<UpdateFileOrderingRequest> | undefined, b: UpdateFileOrderingRequest | PlainMessage<UpdateFileOrderingRequest> | undefined): boolean {
    return proto3.util.equals(UpdateFileOrderingRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.UpdateFileOrderingResponse
 */
export class UpdateFileOrderingResponse extends Message<UpdateFileOrderingResponse> {
  constructor(data?: PartialMessage<UpdateFileOrderingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UpdateFileOrderingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateFileOrderingResponse {
    return new UpdateFileOrderingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateFileOrderingResponse {
    return new UpdateFileOrderingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateFileOrderingResponse {
    return new UpdateFileOrderingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateFileOrderingResponse | PlainMessage<UpdateFileOrderingResponse> | undefined, b: UpdateFileOrderingResponse | PlainMessage<UpdateFileOrderingResponse> | undefined): boolean {
    return proto3.util.equals(UpdateFileOrderingResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveFileFromOfferRequest
 */
export class RemoveFileFromOfferRequest extends Message<RemoveFileFromOfferRequest> {
  /**
   * @generated from field: string offer_file_id = 1;
   */
  offerFileId = "";

  constructor(data?: PartialMessage<RemoveFileFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveFileFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_file_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveFileFromOfferRequest {
    return new RemoveFileFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveFileFromOfferRequest {
    return new RemoveFileFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveFileFromOfferRequest {
    return new RemoveFileFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveFileFromOfferRequest | PlainMessage<RemoveFileFromOfferRequest> | undefined, b: RemoveFileFromOfferRequest | PlainMessage<RemoveFileFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemoveFileFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveFileFromOfferResponse
 */
export class RemoveFileFromOfferResponse extends Message<RemoveFileFromOfferResponse> {
  constructor(data?: PartialMessage<RemoveFileFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveFileFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveFileFromOfferResponse {
    return new RemoveFileFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveFileFromOfferResponse {
    return new RemoveFileFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveFileFromOfferResponse {
    return new RemoveFileFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveFileFromOfferResponse | PlainMessage<RemoveFileFromOfferResponse> | undefined, b: RemoveFileFromOfferResponse | PlainMessage<RemoveFileFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemoveFileFromOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CreateShopRequest
 */
export class CreateShopRequest extends Message<CreateShopRequest> {
  /**
   * @generated from field: string website_id = 1;
   */
  websiteId = "";

  constructor(data?: PartialMessage<CreateShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "website_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateShopRequest {
    return new CreateShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateShopRequest {
    return new CreateShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateShopRequest {
    return new CreateShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateShopRequest | PlainMessage<CreateShopRequest> | undefined, b: CreateShopRequest | PlainMessage<CreateShopRequest> | undefined): boolean {
    return proto3.util.equals(CreateShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CreateShopResponse
 */
export class CreateShopResponse extends Message<CreateShopResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Shop shop = 1;
   */
  shop?: Shop;

  constructor(data?: PartialMessage<CreateShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop", kind: "message", T: Shop },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateShopResponse {
    return new CreateShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateShopResponse {
    return new CreateShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateShopResponse {
    return new CreateShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateShopResponse | PlainMessage<CreateShopResponse> | undefined, b: CreateShopResponse | PlainMessage<CreateShopResponse> | undefined): boolean {
    return proto3.util.equals(CreateShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetShopRequest
 */
export class GetShopRequest extends Message<GetShopRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  constructor(data?: PartialMessage<GetShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetShopRequest {
    return new GetShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetShopRequest {
    return new GetShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetShopRequest {
    return new GetShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetShopRequest | PlainMessage<GetShopRequest> | undefined, b: GetShopRequest | PlainMessage<GetShopRequest> | undefined): boolean {
    return proto3.util.equals(GetShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetShopResponse
 */
export class GetShopResponse extends Message<GetShopResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Shop shop = 1;
   */
  shop?: Shop;

  constructor(data?: PartialMessage<GetShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop", kind: "message", T: Shop },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetShopResponse {
    return new GetShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetShopResponse {
    return new GetShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetShopResponse {
    return new GetShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetShopResponse | PlainMessage<GetShopResponse> | undefined, b: GetShopResponse | PlainMessage<GetShopResponse> | undefined): boolean {
    return proto3.util.equals(GetShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DeleteShopRequest
 */
export class DeleteShopRequest extends Message<DeleteShopRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  constructor(data?: PartialMessage<DeleteShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DeleteShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteShopRequest {
    return new DeleteShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteShopRequest {
    return new DeleteShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteShopRequest {
    return new DeleteShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteShopRequest | PlainMessage<DeleteShopRequest> | undefined, b: DeleteShopRequest | PlainMessage<DeleteShopRequest> | undefined): boolean {
    return proto3.util.equals(DeleteShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DeleteShopResponse
 */
export class DeleteShopResponse extends Message<DeleteShopResponse> {
  constructor(data?: PartialMessage<DeleteShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DeleteShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteShopResponse {
    return new DeleteShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteShopResponse {
    return new DeleteShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteShopResponse {
    return new DeleteShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteShopResponse | PlainMessage<DeleteShopResponse> | undefined, b: DeleteShopResponse | PlainMessage<DeleteShopResponse> | undefined): boolean {
    return proto3.util.equals(DeleteShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddOfferToShopRequest
 */
export class AddOfferToShopRequest extends Message<AddOfferToShopRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: string shop_id = 2;
   */
  shopId = "";

  constructor(data?: PartialMessage<AddOfferToShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddOfferToShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOfferToShopRequest {
    return new AddOfferToShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOfferToShopRequest {
    return new AddOfferToShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOfferToShopRequest {
    return new AddOfferToShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOfferToShopRequest | PlainMessage<AddOfferToShopRequest> | undefined, b: AddOfferToShopRequest | PlainMessage<AddOfferToShopRequest> | undefined): boolean {
    return proto3.util.equals(AddOfferToShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddOfferToShopResponse
 */
export class AddOfferToShopResponse extends Message<AddOfferToShopResponse> {
  constructor(data?: PartialMessage<AddOfferToShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddOfferToShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOfferToShopResponse {
    return new AddOfferToShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOfferToShopResponse {
    return new AddOfferToShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOfferToShopResponse {
    return new AddOfferToShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOfferToShopResponse | PlainMessage<AddOfferToShopResponse> | undefined, b: AddOfferToShopResponse | PlainMessage<AddOfferToShopResponse> | undefined): boolean {
    return proto3.util.equals(AddOfferToShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveOfferFromShopRequest
 */
export class RemoveOfferFromShopRequest extends Message<RemoveOfferFromShopRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: string shop_id = 2;
   */
  shopId = "";

  constructor(data?: PartialMessage<RemoveOfferFromShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveOfferFromShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOfferFromShopRequest {
    return new RemoveOfferFromShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOfferFromShopRequest {
    return new RemoveOfferFromShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOfferFromShopRequest {
    return new RemoveOfferFromShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOfferFromShopRequest | PlainMessage<RemoveOfferFromShopRequest> | undefined, b: RemoveOfferFromShopRequest | PlainMessage<RemoveOfferFromShopRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOfferFromShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveOfferFromShopResponse
 */
export class RemoveOfferFromShopResponse extends Message<RemoveOfferFromShopResponse> {
  constructor(data?: PartialMessage<RemoveOfferFromShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveOfferFromShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOfferFromShopResponse {
    return new RemoveOfferFromShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOfferFromShopResponse {
    return new RemoveOfferFromShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOfferFromShopResponse {
    return new RemoveOfferFromShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOfferFromShopResponse | PlainMessage<RemoveOfferFromShopResponse> | undefined, b: RemoveOfferFromShopResponse | PlainMessage<RemoveOfferFromShopResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOfferFromShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetOrderRequest
 */
export class GetOrderRequest extends Message<GetOrderRequest> {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId = "";

  constructor(data?: PartialMessage<GetOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrderRequest {
    return new GetOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrderRequest {
    return new GetOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrderRequest {
    return new GetOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrderRequest | PlainMessage<GetOrderRequest> | undefined, b: GetOrderRequest | PlainMessage<GetOrderRequest> | undefined): boolean {
    return proto3.util.equals(GetOrderRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetOrderResponse
 */
export class GetOrderResponse extends Message<GetOrderResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Order order = 1;
   */
  order?: Order;

  constructor(data?: PartialMessage<GetOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order", kind: "message", T: Order },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrderResponse {
    return new GetOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrderResponse {
    return new GetOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrderResponse {
    return new GetOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrderResponse | PlainMessage<GetOrderResponse> | undefined, b: GetOrderResponse | PlainMessage<GetOrderResponse> | undefined): boolean {
    return proto3.util.equals(GetOrderResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.ListOrdersRequest
 */
export class ListOrdersRequest extends Message<ListOrdersRequest> {
  /**
   * @generated from field: optional string offer_id = 1;
   */
  offerId?: string;

  constructor(data?: PartialMessage<ListOrdersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.ListOrdersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrdersRequest {
    return new ListOrdersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrdersRequest {
    return new ListOrdersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrdersRequest {
    return new ListOrdersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrdersRequest | PlainMessage<ListOrdersRequest> | undefined, b: ListOrdersRequest | PlainMessage<ListOrdersRequest> | undefined): boolean {
    return proto3.util.equals(ListOrdersRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.ListOrdersResponse
 */
export class ListOrdersResponse extends Message<ListOrdersResponse> {
  /**
   * @generated from field: repeated sited_io.commerce.v2.Order orders = 1;
   */
  orders: Order[] = [];

  constructor(data?: PartialMessage<ListOrdersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.ListOrdersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orders", kind: "message", T: Order, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrdersResponse {
    return new ListOrdersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrdersResponse {
    return new ListOrdersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrdersResponse {
    return new ListOrdersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrdersResponse | PlainMessage<ListOrdersResponse> | undefined, b: ListOrdersResponse | PlainMessage<ListOrdersResponse> | undefined): boolean {
    return proto3.util.equals(ListOrdersResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CreateStripeAccountRequest
 */
export class CreateStripeAccountRequest extends Message<CreateStripeAccountRequest> {
  /**
   * @generated from field: string website_id = 1;
   */
  websiteId = "";

  /**
   * @generated from field: string refresh_url = 2;
   */
  refreshUrl = "";

  /**
   * @generated from field: string return_url = 3;
   */
  returnUrl = "";

  constructor(data?: PartialMessage<CreateStripeAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateStripeAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "website_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "refresh_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "return_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateStripeAccountRequest {
    return new CreateStripeAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateStripeAccountRequest {
    return new CreateStripeAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateStripeAccountRequest {
    return new CreateStripeAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateStripeAccountRequest | PlainMessage<CreateStripeAccountRequest> | undefined, b: CreateStripeAccountRequest | PlainMessage<CreateStripeAccountRequest> | undefined): boolean {
    return proto3.util.equals(CreateStripeAccountRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CreateStripeAccountResponse
 */
export class CreateStripeAccountResponse extends Message<CreateStripeAccountResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.StripeAccount stripe_account = 1;
   */
  stripeAccount?: StripeAccount;

  constructor(data?: PartialMessage<CreateStripeAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateStripeAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stripe_account", kind: "message", T: StripeAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateStripeAccountResponse {
    return new CreateStripeAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateStripeAccountResponse {
    return new CreateStripeAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateStripeAccountResponse {
    return new CreateStripeAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateStripeAccountResponse | PlainMessage<CreateStripeAccountResponse> | undefined, b: CreateStripeAccountResponse | PlainMessage<CreateStripeAccountResponse> | undefined): boolean {
    return proto3.util.equals(CreateStripeAccountResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetStripeAccountRequest
 */
export class GetStripeAccountRequest extends Message<GetStripeAccountRequest> {
  /**
   * @generated from field: string website_id = 1;
   */
  websiteId = "";

  constructor(data?: PartialMessage<GetStripeAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetStripeAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "website_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStripeAccountRequest {
    return new GetStripeAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStripeAccountRequest {
    return new GetStripeAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStripeAccountRequest {
    return new GetStripeAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetStripeAccountRequest | PlainMessage<GetStripeAccountRequest> | undefined, b: GetStripeAccountRequest | PlainMessage<GetStripeAccountRequest> | undefined): boolean {
    return proto3.util.equals(GetStripeAccountRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetStripeAccountResponse
 */
export class GetStripeAccountResponse extends Message<GetStripeAccountResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.StripeAccount stripe_account = 1;
   */
  stripeAccount?: StripeAccount;

  constructor(data?: PartialMessage<GetStripeAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetStripeAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stripe_account", kind: "message", T: StripeAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStripeAccountResponse {
    return new GetStripeAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStripeAccountResponse {
    return new GetStripeAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStripeAccountResponse {
    return new GetStripeAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetStripeAccountResponse | PlainMessage<GetStripeAccountResponse> | undefined, b: GetStripeAccountResponse | PlainMessage<GetStripeAccountResponse> | undefined): boolean {
    return proto3.util.equals(GetStripeAccountResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.BuyOfferRequest
 */
export class BuyOfferRequest extends Message<BuyOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: string shop_id = 2;
   */
  shopId = "";

  /**
   * @generated from oneof sited_io.commerce.v2.BuyOfferRequest.payment_method
   */
  paymentMethod: {
    /**
     * @generated from field: sited_io.commerce.v2.BuyOfferRequest.Stripe stripe = 3;
     */
    value: BuyOfferRequest_Stripe;
    case: "stripe";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<BuyOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.BuyOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "stripe", kind: "message", T: BuyOfferRequest_Stripe, oneof: "payment_method" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BuyOfferRequest {
    return new BuyOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BuyOfferRequest {
    return new BuyOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BuyOfferRequest {
    return new BuyOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BuyOfferRequest | PlainMessage<BuyOfferRequest> | undefined, b: BuyOfferRequest | PlainMessage<BuyOfferRequest> | undefined): boolean {
    return proto3.util.equals(BuyOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.BuyOfferRequest.Stripe
 */
export class BuyOfferRequest_Stripe extends Message<BuyOfferRequest_Stripe> {
  /**
   * @generated from field: string success_url = 1;
   */
  successUrl = "";

  /**
   * @generated from field: string cancel_url = 2;
   */
  cancelUrl = "";

  constructor(data?: PartialMessage<BuyOfferRequest_Stripe>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.BuyOfferRequest.Stripe";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "success_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cancel_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BuyOfferRequest_Stripe {
    return new BuyOfferRequest_Stripe().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BuyOfferRequest_Stripe {
    return new BuyOfferRequest_Stripe().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BuyOfferRequest_Stripe {
    return new BuyOfferRequest_Stripe().fromJsonString(jsonString, options);
  }

  static equals(a: BuyOfferRequest_Stripe | PlainMessage<BuyOfferRequest_Stripe> | undefined, b: BuyOfferRequest_Stripe | PlainMessage<BuyOfferRequest_Stripe> | undefined): boolean {
    return proto3.util.equals(BuyOfferRequest_Stripe, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.BuyOfferResponse
 */
export class BuyOfferResponse extends Message<BuyOfferResponse> {
  /**
   * @generated from oneof sited_io.commerce.v2.BuyOfferResponse.payment_method
   */
  paymentMethod: {
    /**
     * @generated from field: sited_io.commerce.v2.BuyOfferResponse.Stripe stripe = 1;
     */
    value: BuyOfferResponse_Stripe;
    case: "stripe";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<BuyOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.BuyOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stripe", kind: "message", T: BuyOfferResponse_Stripe, oneof: "payment_method" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BuyOfferResponse {
    return new BuyOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BuyOfferResponse {
    return new BuyOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BuyOfferResponse {
    return new BuyOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BuyOfferResponse | PlainMessage<BuyOfferResponse> | undefined, b: BuyOfferResponse | PlainMessage<BuyOfferResponse> | undefined): boolean {
    return proto3.util.equals(BuyOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.BuyOfferResponse.Stripe
 */
export class BuyOfferResponse_Stripe extends Message<BuyOfferResponse_Stripe> {
  /**
   * @generated from field: string link = 1;
   */
  link = "";

  constructor(data?: PartialMessage<BuyOfferResponse_Stripe>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.BuyOfferResponse.Stripe";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BuyOfferResponse_Stripe {
    return new BuyOfferResponse_Stripe().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BuyOfferResponse_Stripe {
    return new BuyOfferResponse_Stripe().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BuyOfferResponse_Stripe {
    return new BuyOfferResponse_Stripe().fromJsonString(jsonString, options);
  }

  static equals(a: BuyOfferResponse_Stripe | PlainMessage<BuyOfferResponse_Stripe> | undefined, b: BuyOfferResponse_Stripe | PlainMessage<BuyOfferResponse_Stripe> | undefined): boolean {
    return proto3.util.equals(BuyOfferResponse_Stripe, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CancelSubscriptionRequest
 */
export class CancelSubscriptionRequest extends Message<CancelSubscriptionRequest> {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId = "";

  constructor(data?: PartialMessage<CancelSubscriptionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CancelSubscriptionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelSubscriptionRequest {
    return new CancelSubscriptionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelSubscriptionRequest {
    return new CancelSubscriptionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelSubscriptionRequest {
    return new CancelSubscriptionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CancelSubscriptionRequest | PlainMessage<CancelSubscriptionRequest> | undefined, b: CancelSubscriptionRequest | PlainMessage<CancelSubscriptionRequest> | undefined): boolean {
    return proto3.util.equals(CancelSubscriptionRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CancelSubscriptionResponse
 */
export class CancelSubscriptionResponse extends Message<CancelSubscriptionResponse> {
  constructor(data?: PartialMessage<CancelSubscriptionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CancelSubscriptionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelSubscriptionResponse {
    return new CancelSubscriptionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelSubscriptionResponse {
    return new CancelSubscriptionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelSubscriptionResponse {
    return new CancelSubscriptionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CancelSubscriptionResponse | PlainMessage<CancelSubscriptionResponse> | undefined, b: CancelSubscriptionResponse | PlainMessage<CancelSubscriptionResponse> | undefined): boolean {
    return proto3.util.equals(CancelSubscriptionResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.ResumeSubscriptionRequest
 */
export class ResumeSubscriptionRequest extends Message<ResumeSubscriptionRequest> {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId = "";

  constructor(data?: PartialMessage<ResumeSubscriptionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.ResumeSubscriptionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResumeSubscriptionRequest {
    return new ResumeSubscriptionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResumeSubscriptionRequest {
    return new ResumeSubscriptionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResumeSubscriptionRequest {
    return new ResumeSubscriptionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResumeSubscriptionRequest | PlainMessage<ResumeSubscriptionRequest> | undefined, b: ResumeSubscriptionRequest | PlainMessage<ResumeSubscriptionRequest> | undefined): boolean {
    return proto3.util.equals(ResumeSubscriptionRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.ResumeSubscriptionResponse
 */
export class ResumeSubscriptionResponse extends Message<ResumeSubscriptionResponse> {
  constructor(data?: PartialMessage<ResumeSubscriptionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.ResumeSubscriptionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResumeSubscriptionResponse {
    return new ResumeSubscriptionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResumeSubscriptionResponse {
    return new ResumeSubscriptionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResumeSubscriptionResponse {
    return new ResumeSubscriptionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResumeSubscriptionResponse | PlainMessage<ResumeSubscriptionResponse> | undefined, b: ResumeSubscriptionResponse | PlainMessage<ResumeSubscriptionResponse> | undefined): boolean {
    return proto3.util.equals(ResumeSubscriptionResponse, a, b);
  }
}

