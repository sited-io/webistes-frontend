// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file sited_io/payment/v1/stripe.proto (package sited_io.payment.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message sited_io.payment.v1.StripeAccount
 */
export class StripeAccount extends Message<StripeAccount> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  /**
   * @generated from field: string stripe_account_id = 2;
   */
  stripeAccountId = "";

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  constructor(data?: PartialMessage<StripeAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.StripeAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "stripe_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StripeAccount {
    return new StripeAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StripeAccount {
    return new StripeAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StripeAccount {
    return new StripeAccount().fromJsonString(jsonString, options);
  }

  static equals(a: StripeAccount | PlainMessage<StripeAccount> | undefined, b: StripeAccount | PlainMessage<StripeAccount> | undefined): boolean {
    return proto3.util.equals(StripeAccount, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.StripeAccountDetails
 */
export class StripeAccountDetails extends Message<StripeAccountDetails> {
  /**
   * @generated from field: bool charges_enabled = 1;
   */
  chargesEnabled = false;

  /**
   * @generated from field: bool details_submitted = 2;
   */
  detailsSubmitted = false;

  constructor(data?: PartialMessage<StripeAccountDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.StripeAccountDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "charges_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "details_submitted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StripeAccountDetails {
    return new StripeAccountDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StripeAccountDetails {
    return new StripeAccountDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StripeAccountDetails {
    return new StripeAccountDetails().fromJsonString(jsonString, options);
  }

  static equals(a: StripeAccountDetails | PlainMessage<StripeAccountDetails> | undefined, b: StripeAccountDetails | PlainMessage<StripeAccountDetails> | undefined): boolean {
    return proto3.util.equals(StripeAccountDetails, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.CreateAccountRequest
 */
export class CreateAccountRequest extends Message<CreateAccountRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  constructor(data?: PartialMessage<CreateAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.CreateAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountRequest {
    return new CreateAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountRequest {
    return new CreateAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountRequest {
    return new CreateAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined, b: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined): boolean {
    return proto3.util.equals(CreateAccountRequest, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.CreateAccountResponse
 */
export class CreateAccountResponse extends Message<CreateAccountResponse> {
  /**
   * @generated from field: sited_io.payment.v1.StripeAccount account = 1;
   */
  account?: StripeAccount;

  constructor(data?: PartialMessage<CreateAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.CreateAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: StripeAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountResponse {
    return new CreateAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountResponse {
    return new CreateAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountResponse {
    return new CreateAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined, b: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined): boolean {
    return proto3.util.equals(CreateAccountResponse, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.CreateAccountLinkRequest
 */
export class CreateAccountLinkRequest extends Message<CreateAccountLinkRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  /**
   * @generated from field: string refresh_url = 2;
   */
  refreshUrl = "";

  /**
   * @generated from field: string return_url = 3;
   */
  returnUrl = "";

  constructor(data?: PartialMessage<CreateAccountLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.CreateAccountLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "refresh_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "return_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountLinkRequest {
    return new CreateAccountLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountLinkRequest {
    return new CreateAccountLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountLinkRequest {
    return new CreateAccountLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccountLinkRequest | PlainMessage<CreateAccountLinkRequest> | undefined, b: CreateAccountLinkRequest | PlainMessage<CreateAccountLinkRequest> | undefined): boolean {
    return proto3.util.equals(CreateAccountLinkRequest, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.CreateAccountLinkResponse
 */
export class CreateAccountLinkResponse extends Message<CreateAccountLinkResponse> {
  /**
   * @generated from field: string link = 1;
   */
  link = "";

  constructor(data?: PartialMessage<CreateAccountLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.CreateAccountLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountLinkResponse {
    return new CreateAccountLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountLinkResponse {
    return new CreateAccountLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountLinkResponse {
    return new CreateAccountLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccountLinkResponse | PlainMessage<CreateAccountLinkResponse> | undefined, b: CreateAccountLinkResponse | PlainMessage<CreateAccountLinkResponse> | undefined): boolean {
    return proto3.util.equals(CreateAccountLinkResponse, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.GetAccountRequest
 */
export class GetAccountRequest extends Message<GetAccountRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  constructor(data?: PartialMessage<GetAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.GetAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountRequest {
    return new GetAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountRequest {
    return new GetAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountRequest {
    return new GetAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccountRequest | PlainMessage<GetAccountRequest> | undefined, b: GetAccountRequest | PlainMessage<GetAccountRequest> | undefined): boolean {
    return proto3.util.equals(GetAccountRequest, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.GetAccountResponse
 */
export class GetAccountResponse extends Message<GetAccountResponse> {
  /**
   * @generated from field: sited_io.payment.v1.StripeAccount account = 1;
   */
  account?: StripeAccount;

  constructor(data?: PartialMessage<GetAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.GetAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: StripeAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountResponse {
    return new GetAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountResponse {
    return new GetAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountResponse {
    return new GetAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccountResponse | PlainMessage<GetAccountResponse> | undefined, b: GetAccountResponse | PlainMessage<GetAccountResponse> | undefined): boolean {
    return proto3.util.equals(GetAccountResponse, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.GetAccountDetailsRequest
 */
export class GetAccountDetailsRequest extends Message<GetAccountDetailsRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  constructor(data?: PartialMessage<GetAccountDetailsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.GetAccountDetailsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountDetailsRequest {
    return new GetAccountDetailsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountDetailsRequest {
    return new GetAccountDetailsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountDetailsRequest {
    return new GetAccountDetailsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccountDetailsRequest | PlainMessage<GetAccountDetailsRequest> | undefined, b: GetAccountDetailsRequest | PlainMessage<GetAccountDetailsRequest> | undefined): boolean {
    return proto3.util.equals(GetAccountDetailsRequest, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.GetAccountDetailsResponse
 */
export class GetAccountDetailsResponse extends Message<GetAccountDetailsResponse> {
  /**
   * @generated from field: sited_io.payment.v1.StripeAccount account = 1;
   */
  account?: StripeAccount;

  /**
   * @generated from field: sited_io.payment.v1.StripeAccountDetails details = 2;
   */
  details?: StripeAccountDetails;

  constructor(data?: PartialMessage<GetAccountDetailsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.GetAccountDetailsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: StripeAccount },
    { no: 2, name: "details", kind: "message", T: StripeAccountDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountDetailsResponse {
    return new GetAccountDetailsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountDetailsResponse {
    return new GetAccountDetailsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountDetailsResponse {
    return new GetAccountDetailsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccountDetailsResponse | PlainMessage<GetAccountDetailsResponse> | undefined, b: GetAccountDetailsResponse | PlainMessage<GetAccountDetailsResponse> | undefined): boolean {
    return proto3.util.equals(GetAccountDetailsResponse, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.CreateCheckoutSessionRequest
 */
export class CreateCheckoutSessionRequest extends Message<CreateCheckoutSessionRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: string success_url = 2;
   */
  successUrl = "";

  /**
   * @generated from field: string cancel_url = 3;
   */
  cancelUrl = "";

  constructor(data?: PartialMessage<CreateCheckoutSessionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.CreateCheckoutSessionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "success_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "cancel_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCheckoutSessionRequest {
    return new CreateCheckoutSessionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCheckoutSessionRequest {
    return new CreateCheckoutSessionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCheckoutSessionRequest {
    return new CreateCheckoutSessionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateCheckoutSessionRequest | PlainMessage<CreateCheckoutSessionRequest> | undefined, b: CreateCheckoutSessionRequest | PlainMessage<CreateCheckoutSessionRequest> | undefined): boolean {
    return proto3.util.equals(CreateCheckoutSessionRequest, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.CreateCheckoutSessionResponse
 */
export class CreateCheckoutSessionResponse extends Message<CreateCheckoutSessionResponse> {
  /**
   * @generated from field: string link = 1;
   */
  link = "";

  constructor(data?: PartialMessage<CreateCheckoutSessionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.CreateCheckoutSessionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCheckoutSessionResponse {
    return new CreateCheckoutSessionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCheckoutSessionResponse {
    return new CreateCheckoutSessionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCheckoutSessionResponse {
    return new CreateCheckoutSessionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateCheckoutSessionResponse | PlainMessage<CreateCheckoutSessionResponse> | undefined, b: CreateCheckoutSessionResponse | PlainMessage<CreateCheckoutSessionResponse> | undefined): boolean {
    return proto3.util.equals(CreateCheckoutSessionResponse, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.CancelSubscriptionRequest
 */
export class CancelSubscriptionRequest extends Message<CancelSubscriptionRequest> {
  /**
   * @generated from field: string stripe_subscription_id = 1;
   */
  stripeSubscriptionId = "";

  /**
   * @generated from field: string shop_id = 2;
   */
  shopId = "";

  constructor(data?: PartialMessage<CancelSubscriptionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.CancelSubscriptionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stripe_subscription_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelSubscriptionRequest {
    return new CancelSubscriptionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelSubscriptionRequest {
    return new CancelSubscriptionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelSubscriptionRequest {
    return new CancelSubscriptionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CancelSubscriptionRequest | PlainMessage<CancelSubscriptionRequest> | undefined, b: CancelSubscriptionRequest | PlainMessage<CancelSubscriptionRequest> | undefined): boolean {
    return proto3.util.equals(CancelSubscriptionRequest, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.CancelSubscriptionResponse
 */
export class CancelSubscriptionResponse extends Message<CancelSubscriptionResponse> {
  constructor(data?: PartialMessage<CancelSubscriptionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.CancelSubscriptionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelSubscriptionResponse {
    return new CancelSubscriptionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelSubscriptionResponse {
    return new CancelSubscriptionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelSubscriptionResponse {
    return new CancelSubscriptionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CancelSubscriptionResponse | PlainMessage<CancelSubscriptionResponse> | undefined, b: CancelSubscriptionResponse | PlainMessage<CancelSubscriptionResponse> | undefined): boolean {
    return proto3.util.equals(CancelSubscriptionResponse, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.ResumeSubscriptionRequest
 */
export class ResumeSubscriptionRequest extends Message<ResumeSubscriptionRequest> {
  /**
   * @generated from field: string stripe_subscription_id = 1;
   */
  stripeSubscriptionId = "";

  /**
   * @generated from field: string shop_id = 2;
   */
  shopId = "";

  constructor(data?: PartialMessage<ResumeSubscriptionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.ResumeSubscriptionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stripe_subscription_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResumeSubscriptionRequest {
    return new ResumeSubscriptionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResumeSubscriptionRequest {
    return new ResumeSubscriptionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResumeSubscriptionRequest {
    return new ResumeSubscriptionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResumeSubscriptionRequest | PlainMessage<ResumeSubscriptionRequest> | undefined, b: ResumeSubscriptionRequest | PlainMessage<ResumeSubscriptionRequest> | undefined): boolean {
    return proto3.util.equals(ResumeSubscriptionRequest, a, b);
  }
}

/**
 * @generated from message sited_io.payment.v1.ResumeSubscriptionResponse
 */
export class ResumeSubscriptionResponse extends Message<ResumeSubscriptionResponse> {
  constructor(data?: PartialMessage<ResumeSubscriptionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.payment.v1.ResumeSubscriptionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResumeSubscriptionResponse {
    return new ResumeSubscriptionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResumeSubscriptionResponse {
    return new ResumeSubscriptionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResumeSubscriptionResponse {
    return new ResumeSubscriptionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResumeSubscriptionResponse | PlainMessage<ResumeSubscriptionResponse> | undefined, b: ResumeSubscriptionResponse | PlainMessage<ResumeSubscriptionResponse> | undefined): boolean {
    return proto3.util.equals(ResumeSubscriptionResponse, a, b);
  }
}

